version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: dota2-postgres
    environment:
      POSTGRES_USER: dota2_user
      POSTGRES_PASSWORD: dota2_password
      POSTGRES_DB: dota2_analytics
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - dota2-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: dota2-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dota2-network

  # 后端API服务
  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile
    container_name: dota2-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://dota2_user:dota2_password@postgres:5432/dota2_analytics
      REDIS_URL: redis://redis:6379
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    volumes:
      - ../../backend:/app
      - /app/node_modules
    networks:
      - dota2-network

  # 前端应用
  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    container_name: dota2-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ../../frontend:/app
      - /app/node_modules
    networks:
      - dota2-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: dota2-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - dota2-network

volumes:
  postgres_data:
  redis_data:

networks:
  dota2-network:
    driver: bridge